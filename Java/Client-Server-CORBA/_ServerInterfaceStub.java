
/**
* _ServerInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ServerInterface.idl
* Friday, January 3, 2025 3:40:24 PM CET
*/

public class _ServerInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements ServerInterface
{


  // Responder methods
  public String addResource (String resourceID, String resourceName, int duration) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addResource", true);
                $out.write_string (resourceID);
                $out.write_string (resourceName);
                $out.write_long (duration);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addResource (resourceID, resourceName, duration        );
            } finally {
                _releaseReply ($in);
            }
  } // addResource

  public String removeResource (String resourceID, int duration) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeResource", true);
                $out.write_string (resourceID);
                $out.write_long (duration);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeResource (resourceID, duration        );
            } finally {
                _releaseReply ($in);
            }
  } // removeResource

  public String listResourceAvailability (String resourceName) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listResourceAvailability", true);
                $out.write_string (resourceName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listResourceAvailability (resourceName        );
            } finally {
                _releaseReply ($in);
            }
  } // listResourceAvailability


  // Coordinator methods
  public String requestResource (String coordinatorID, String resourceID, int duration) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("requestResource", true);
                $out.write_string (coordinatorID);
                $out.write_string (resourceID);
                $out.write_long (duration);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return requestResource (coordinatorID, resourceID, duration        );
            } finally {
                _releaseReply ($in);
            }
  } // requestResource

  public String findResource (String coordinatorID, String resourceName) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("findResource", true);
                $out.write_string (coordinatorID);
                $out.write_string (resourceName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return findResource (coordinatorID, resourceName        );
            } finally {
                _releaseReply ($in);
            }
  } // findResource

  public String returnResource (String coordinatorID, String resourceID) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("returnResource", true);
                $out.write_string (coordinatorID);
                $out.write_string (resourceID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return returnResource (coordinatorID, resourceID        );
            } finally {
                _releaseReply ($in);
            }
  } // returnResource

  public String swapResource (String coordinatorID, String oldResourceID, String oldResourceType, String newResourceID, String newResourceType) throws ServerInterfacePackage.ResourceException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("swapResource", true);
                $out.write_string (coordinatorID);
                $out.write_string (oldResourceID);
                $out.write_string (oldResourceType);
                $out.write_string (newResourceID);
                $out.write_string (newResourceType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServerInterface/ResourceException:1.0"))
                    throw ServerInterfacePackage.ResourceExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return swapResource (coordinatorID, oldResourceID, oldResourceType, newResourceID, newResourceType        );
            } finally {
                _releaseReply ($in);
            }
  } // swapResource

  public void addToQueue (String clientId, String resourceId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addToQueue", true);
                $out.write_string (clientId);
                $out.write_string (resourceId);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addToQueue (clientId, resourceId        );
            } finally {
                _releaseReply ($in);
            }
  } // addToQueue

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ServerInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ServerInterfaceStub
